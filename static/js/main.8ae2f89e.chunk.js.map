{"version":3,"sources":["services/storage.js","services/AppState.js","services/MultiTouch.js","artboard/Artboard.js","palette/palette.js","toolbox/Toolbox.js","App.js","serviceWorker.js","index.js"],"names":["STORE","useStorage","key","_db","getDb","Promise","resolve","reject","window","indexedDB","request","open","onerror","onsuccess","event","target","result","onupgradeneeded","createObjectStore","keyPath","a","db","transaction","objectStore","get","data","put","current","update","CurrentImageDB","SettingsDB","TOOLS","PENCIL","ERASER","SELECTION","reducer","state","action","newState","calculateNewState","type","initiated","value","Object","values","includes","tool","zoom","history","capacity","index","length","items","Math","min","slice","canvas","width","height","preState","afterReduced","INITIAL_STATE","palette","size","color","delta","x0","y0","x1","y1","dist","points","hypot","useMultiTouch","useState","gesture","setGesture","ref","useRef","useEffect","node","addEventListener","e","prev","targetTouches","b","start","x","clientX","y","clientY","distance","movement","scale","gestureStart","raw_scale","max","gestureUpdate","isResized","document","body","clientWidth","innerWidth","isUsingStylus","startsWith","touchType","clearCanvas","getContext","clearRect","Artboard","props","hasStylus","setStylus","drawingCanvas","backgroundCanvas","selectionCanvas","pen","lastPoint","startPoint","selections","setSelections","drawSelection","selection","ctx","setLineDash","strokeStyle","lineWidth","strokeRect","xTarget","yTarget","commitUpdate","drawImage","toDataURL","onCanvasUpdate","handleDrawingStart","isStylus","preventDefault","rect","getBoundingClientRect","draw","left","top","handleDrawingEnd","active_selection","getClosestPointToCanvas","_","isLength","entries","floor","xi","yi","n","abs","dx","dy","push","round","fillStyle","forEach","fillRect","oldSelections","pop","xn","yn","getImageData","image","Image","onload","src","drawingCtx","putImageData","canvasSize","cssSize","cssTransform","transform","pos","className","onMouseDown","onMouseMove","buttons","onMouseUp","onTouchStart","onTouchMove","touches","touch","scrollX","scrollY","onTouchEnd","style","id","Color","selected","backgroundColor","onClick","handleColorUpdate","Palette","colors","map","c","onColorUpdate","Toolbox","isExpanded","setIsExpanded","toolsRef","handleTouchAndClick","changedTouches","elem","elementFromPoint","pageX","contains","click","onTouchCancel","clear","setTool","disabled","setColor","App","useReducer","dispatch","all","then","settings","catch","dispatcher","newColor","indexOf","newTool","addHistory","item","useAppState","reader","setPos","input","prompt","split","parseInt","appRef","multiTouchStartState","setMultiTouchStartSate","newZoom","trunc","canvasData","canUndo","canRedo","confirm","Boolean","location","hostname","match","ReactDOM","render","getElementById","lastTouchEnd","timeStamp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ae2f89e.chunk.js","sourcesContent":["const DB = 'DIMGAI-PIXEL';\nconst STORE = 'USER_DATA';\nconst VERSION = 1;\n\nfunction useStorage(key) {\n  let _db = null;\n  function getDb() {\n    return new Promise((resolve, reject) => {\n      if (!window.indexedDB) { reject(); return; }\n      if (_db) { resolve(_db); return; }\n\n      let request = indexedDB.open(DB, VERSION);\n\n      request.onerror = () => {\n        reject();\n        return;\n      };\n\n      request.onsuccess = (event) => {\n        _db = event.target.result;\n        resolve(_db);\n      };\n      request.onupgradeneeded = (event) => {\n        let db = event.target.result;\n        db.createObjectStore(STORE, {keyPath: 'key'});\n      };\n    });\n  }\n\n  async function current() {\n    const db = await getDb();\n    return new Promise((resolve, reject) => {\n      let store = db.transaction([STORE]).objectStore(STORE);\n      let request = store.get(key);\n      request.onsuccess = () => {\n        if (request.result) {\n          resolve(request.result.data);\n        }\n        else {\n          reject();\n        }\n      };\n      request.onerror = reject;\n    });\n  }\n\n  async function update(data) {\n    const db = await getDb();\n    return new Promise((resolve, reject) => {\n      let store = db.transaction([STORE], 'readwrite').objectStore(STORE);\n      let request = store.put({key: key, data: data});\n      request.onerror = reject;\n      request.onsuccess = resolve;\n    });\n  }\n  \n  return {current: current, update: update};\n}\n\nexport default useStorage;\n","import {useReducer, useEffect} from 'react';\nimport useStorage from 'services/storage';\n\nconst CurrentImageDB = useStorage('currentImage');\nconst SettingsDB = useStorage('settings');\n\nexport const TOOLS = {\n  PENCIL: 'pencil',\n  ERASER: 'eraser',\n  SELECTION: 'selection',\n};\n\nfunction calculateNewState(state, action){\n  switch (action.type) {\n  case 'INIT': {\n    return {...state, initiated: true};\n  }\n  case 'TOOL': {\n    if (!action.value) { return state; }\n    if (!Object.values(TOOLS).includes(action.value.type)) { return state; }\n    return {\n      ...state,\n      tool: {...state.tool, ...action.value},\n    };\n  }\n  case 'ZOOM_IN':\n    return calculateNewState(state, {type: 'ZOOM_TO', value: state.zoom + 1});\n  case 'ZOOM_OUT':\n    return calculateNewState(state, {type: 'ZOOM_TO', value: state.zoom - 1});\n  case 'ZOOM_TO': {\n    if (action.value >= 1)\n      return {...state, zoom: action.value};\n    return state;\n  }\n  case 'SET_HISTORY': {\n    return {\n      ...state,\n      history: {\n        capacity: state.history.capacity,\n        index: action.value.length - 1,\n        items: action.value,\n      },\n    };\n  }\n  case 'ADD_HISTORY': {\n    const capacity = state.history.capacity;\n    const index = state.history.index;\n    const items = state.history.items;\n    return {\n      ...state,\n      history: {\n        capacity: capacity,\n        index: Math.min(index + 1, capacity - 1),\n        items: [...items.slice(0, index + 1), action.value].slice(-capacity),\n      },\n    };\n  }\n  case 'UNDO': {\n    if (state.history.index <= 0) { return state; }\n    return {\n      ...state,\n      history: {\n        ...state.history,\n        index: state.history.index - 1,\n      },\n    };\n  }\n  case 'REDO': {\n    if (state.history.items.length <= state.history.index + 1) {\n      return state;\n    }\n    return {\n      ...state,\n      history: {\n        ...state.history,\n        index: state.history.index + 1,\n      },\n    };\n  }\n  case 'CLEAR_CANVAS': {\n    return {\n      ...calculateNewState(state, {type: 'SET_HISTORY', value: [null]}),\n      canvas: null,\n    };\n  }\n  case 'RESIZE_CANVAS': {\n    const canvas = action.value && action.value.width && action.value.height\n      ? action.value : null;\n    return {...state, canvas: canvas};\n  }\n  default:\n    return state;\n  }\n}\n\nfunction afterReduced(preState, newState, action) {\n  if (preState.initiated && preState !== newState) {\n    switch (action.type) {\n    case 'SET_HISTORY':\n    case 'ADD_HISTORY':\n      CurrentImageDB.update(newState.history.items[newState.history.index]);\n      break;\n    case 'TOOL':\n    case 'CLEAR_CANVAS':\n    case 'RESIZE_CANVAS':\n      SettingsDB.update({canvas: newState.canvas, tool: newState.tool});\n      break;\n    default:\n    }\n  }\n}\n\nfunction reducer(state, action) {\n  const newState = calculateNewState(state, action);\n  afterReduced(state, newState, action);\n  return newState;\n}\n\nconst INITIAL_STATE = {\n  palette: [\n    '#000000',\n    '#5f5750',\n    '#82759a',\n    '#c0c1c5',\n    '#fff0e7',\n    '#7d2953',\n    '#ff074e',\n    '#ff76a6',\n    '#a95238',\n    '#ffa108',\n    '#feeb2c',\n    '#ffcaa8',\n    '#008551',\n    '#00e339',\n    '#222e53',\n    '#2cabfe',\n  ],\n  tool: {\n    type: TOOLS.PENCIL,\n    size: 1,\n    color: 0,\n  },\n  zoom: 5,\n  canvas: null,\n  history: {\n    capacity: 10,\n    index: 0,\n    items: [null],\n  },\n  initiated: false,\n};\n\nexport default function useAppState() {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE);\n\n  // init history\n  useEffect(() => {\n    Promise.all([CurrentImageDB.current(), SettingsDB.current()])\n      .then(values => {\n        const [image, settings] = values;\n        dispatch({type: 'SET_HISTORY', value: [image]});\n        dispatch({type: 'RESIZE_CANVAS', value: settings.canvas});\n        dispatch({type: 'TOOL', value: settings.tool});\n        dispatch({type: 'INIT'});\n      }).catch(() => {\n        dispatch({type: 'INIT'});\n      });\n  }, []);\n\n  const dispatcher = {\n    setColor: newColor => {\n      let color = state.palette.indexOf(newColor);\n      if (color === -1) {\n        color = newColor;\n      }\n      dispatch({type: 'TOOL', value: {type: TOOLS.PENCIL, color: color}});\n    },\n    setTool: newTool => { dispatch({type: 'TOOL', value: {type: newTool}}); },\n    addHistory: item => {\n      dispatch({type: 'ADD_HISTORY', value: item});\n    },\n  };\n\n  const reader = {\n    get canRedo() {\n      return state.history.index < state.history.items.length - 1;\n    },\n    get canUndo() { return state.history.index > 0; },\n    get canvasData() { return state.history.items[state.history.index]; },\n    get color() { return state.palette[state.tool.color] || state.tool.color; },\n    get tool() { return state.tool.type; },\n    get width() { return state.canvas ? state.canvas.width : 0; },\n    get height() { return state.canvas ? state.canvas.height : 0; },\n  };\n\n  return [state, dispatch, dispatcher, reader];\n}\n","import {useState, useRef, useEffect} from 'react';\n\nfunction delta(x0, y0, x1, y1) {\n  return [x0 - x1, y0 - y1];\n}\n\nfunction dist(points) {\n  return Math.hypot(...points);\n}\n\nfunction gestureStart(e, gesture) {\n  if (e.targetTouches.length === 2) {\n    const [a, b] = e.targetTouches;\n    const start = {\n      x: (a.clientX + b.clientX) / 2,\n      y: (a.clientY + b.clientY) / 2,\n      distance: dist(delta(a.clientX, a.clientY, b.clientX, b.clientY)),\n    };\n    return {\n      start: start,\n      current: start,\n      movement: [0, 0],\n      scale: 1,\n    };\n  }\n  return gesture;\n}\n\nfunction gestureUpdate(e, gesture) {\n  if (gesture && e.targetTouches.length === 2) {\n    const [a, b] = e.targetTouches;\n    const current = {\n      x: (a.clientX + b.clientX) / 2,\n      y: (a.clientY + b.clientY) / 2,\n      distance: dist(delta(a.clientX, a.clientY, b.clientX, b.clientY)),\n    };\n    const raw_scale = current.distance / gesture.start.distance;\n    const scale = raw_scale > 1\n      ? Math.max(1, raw_scale - 0.5)\n      : Math.min(1, raw_scale + 0.5);\n    return {\n      ...gesture,\n      current: current,\n      movement: [\n        current.x - gesture.start.x,\n        current.y - gesture.start.y,\n      ],\n      scale: scale,\n    };\n  }\n  return gesture;\n}\n\nfunction gestureEnd() {\n  return null;\n}\n\nexport default function useMultiTouch() {\n  let [gesture, setGesture] = useState(null);\n  let ref = useRef();\n  useEffect(() => {\n    const node = ref.current;\n    node.addEventListener('touchstart', e => {\n      setGesture(prev => gestureStart(e, prev));\n    });\n    node.addEventListener('touchmove', e => {\n      setGesture(prev => gestureUpdate(e, prev));\n    });\n    node.addEventListener('touchend', e => {\n      setGesture(prev => gestureEnd(e, prev));\n    });\n  }, [ref]);\n  return [gesture, ref];\n}\n","import React, {useState, useRef, useEffect} from 'react';\nimport _ from 'lodash';\nimport './Artboard.css';\n\nimport {TOOLS} from 'services/AppState';\n\nconst MOUSE_LEFT = 1;\nconst CENTER = 'translate(-50%, -50%)';\n\nfunction isResized() {\n  return document.body.clientWidth !== window.innerWidth;\n}\n\nfunction isUsingStylus(event) {\n  return event.type.startsWith('touch') &&\n         event.targetTouches[0].touchType === 'stylus';\n}\n\nfunction clearCanvas(canvas) {\n  if (!canvas) { return; }\n  const ctx = canvas.getContext('2d');\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n}\n\nfunction Artboard(props) {\n  const [hasStylus, setStylus] = useState(false);\n  const drawingCanvas = useRef(null);\n  const backgroundCanvas = useRef(null);\n  const selectionCanvas = useRef(null);\n  const pen = useRef({lastPoint: null, startPoint: null, type: props.tool});\n  const [selections, setSelections] = useState([]);\n\n  // redraw canvas effect\n  useEffect(() => {\n    const ctx = backgroundCanvas.current.getContext('2d');\n    if (!props.data) {\n      clearCanvas(backgroundCanvas.current);\n    } else {\n      let image = new Image();\n      image.onload = () => {\n        clearCanvas(backgroundCanvas.current);\n        ctx.drawImage(image, 0, 0);\n      };\n      image.src = props.data;\n    }\n  }, [props.data]);\n\n  // selection effect\n  useEffect(() => {\n    clearCanvas(selectionCanvas.current);\n    clearCanvas(drawingCanvas.current);\n\n    const drawingCtx = drawingCanvas.current.getContext('2d');\n    for (let selection of selections) {\n      if (selection.width !== 0 && selection.height !== 0) {\n        drawingCtx.putImageData(\n          selection.data, selection.xTarget, selection.yTarget);\n      }\n      drawSelection(selection);\n    }\n  }, [selections]);\n\n  function drawSelection(selection) {\n    const ctx = selectionCanvas.current.getContext('2d');\n    ctx.setLineDash([6, 3]);\n    ctx.strokeStyle = 'rgba(0, 0, 0, 0.4)';\n    ctx.lineWidth = 2;\n    if (selection.width !== 0 || selection.height !== 0) {\n      ctx.strokeRect(\n        selection.xTarget * props.zoom,\n        selection.yTarget * props.zoom,\n        selection.width * props.zoom,\n        selection.height * props.zoom,\n      );\n    }\n  }\n\n  function commitUpdate() {\n    const backgroundCtx = backgroundCanvas.current.getContext('2d');\n    backgroundCtx.drawImage(drawingCanvas.current, 0, 0);\n    const data = backgroundCanvas.current.toDataURL();\n    if (data !== props.data) {\n      props.onCanvasUpdate(data);\n    }\n    clearCanvas(drawingCanvas.current);\n  }\n\n  function handleDrawingStart(e) {\n    if (isResized()) { return; }\n    if (e.type.startsWith('touch')) {\n      const isStylus = isUsingStylus(e);\n      setStylus(hasStylus || isStylus);\n      if (hasStylus && !isStylus) { return; }\n    } else {\n      e.preventDefault();\n    }\n\n    clearCanvas(selectionCanvas.current);\n    let x = e.targetTouches ? e.targetTouches[0].clientX : e.clientX;\n    let y = e.targetTouches ? e.targetTouches[0].clientY : e.clientY;\n    pen.current.lastPoint = null;\n    const rect = drawingCanvas.current.getBoundingClientRect();\n    draw((x - rect.left) / props.zoom, (y - rect.top) / props.zoom, 1);\n  }\n\n  function handleMouseMove(e) {\n    if (e.buttons !== MOUSE_LEFT) { return; }\n    if (!pen.current.lastPoint) { return; }\n    e.preventDefault();\n    const rect = drawingCanvas.current.getBoundingClientRect();\n    draw(\n      (e.clientX - rect.left) / props.zoom,\n      (e.clientY - rect.top) / props.zoom,\n      1);\n  }\n\n  function handleTouchMove(e) {\n    if (e.touches.length !== 1 || isResized()) { return; }\n    if (hasStylus && !isUsingStylus(e)) { return; }\n    if (!pen.current.lastPoint) { return; }\n    const rect = drawingCanvas.current.getBoundingClientRect();\n    const touch = e.touches[0];\n    const x = (touch.clientX - rect.left - window.scrollX) / props.zoom;\n    const y = (touch.clientY - rect.top - window.scrollY) / props.zoom;\n    draw(x, y, 1);\n  }\n\n  function handleDrawingEnd(e) {\n    if (isResized()) { return; }\n    e.preventDefault();\n    if (props.tool !== TOOLS.SELECTION) {\n      const backgroundCtx = backgroundCanvas.current.getContext('2d');\n      backgroundCtx.drawImage(drawingCanvas.current, 0, 0);\n      commitUpdate();\n      clearCanvas(drawingCanvas.current);\n    } else {\n      for (let selection of selections) {\n        const ctx = backgroundCanvas.current.getContext('2d');\n        ctx.clearRect(\n          selection.x, selection.y, selection.width, selection.height);\n      }\n    }\n    pen.current.lastPoint = null;\n    pen.current.startPoint = null;\n    pen.current.active_selection = null;\n  }\n\n  function getClosestPointToCanvas([x, y]) {\n    return [\n      Math.min(props.width, Math.max(0, x)),\n      Math.min(props.height, Math.max(0, y)),\n    ];\n  }\n\n  function draw(x, y, size) {\n    if (props.tool === TOOLS.SELECTION &&\n        !_.isLength(pen.current.active_selection)) {\n      for (let [index, selection] of selections.entries()) {\n        if (\n          (x > selection.xTarget && x < selection.xTarget + selection.width) &&\n          (y > selection.yTarget && y < selection.yTarget + selection.height)\n        ) {\n          pen.current.active_selection = index;\n          break;\n        }\n      }\n    }\n    x = Math.floor(x);\n    y = Math.floor(y);\n    let points = [[x, y]];\n    if (pen.current.lastPoint) {\n      let [x0, y0] = pen.current.lastPoint;\n      let xi = x0;\n      let yi = y0;\n      let n = Math.max(Math.abs(x - x0), Math.abs(y - y0));\n      let dx = (x - x0) / n;\n      let dy = (y - y0) / n;\n      while (n > 0) {\n        xi = xi + dx;\n        yi = yi + dy;\n        points.push([Math.round(xi), Math.round(yi)]);\n        n--;\n      }\n    } else {\n      pen.current.startPoint = [x, y];\n      if (_.isLength(pen.current.active_selection)) {\n        const selection = selections[pen.current.active_selection];\n        pen.current.delta = [selection.xTarget - x, selection.yTarget - y];\n      } else {\n        if (props.tool === TOOLS.SELECTION) {\n          commitUpdate();\n        }\n        setSelections([]);\n      }\n    }\n\n    switch (props.tool) {\n    case TOOLS.PENCIL: {\n      const ctx = drawingCanvas.current.getContext('2d');\n      ctx.fillStyle = props.color;\n      points.forEach(([x, y]) => ctx.fillRect(x, y, size, size));\n      break;\n    }\n    case TOOLS.ERASER: {\n      const ctx = backgroundCanvas.current.getContext('2d');\n      points.forEach(([x, y]) => ctx.clearRect(x, y, size, size));\n      break;\n    }\n    case TOOLS.SELECTION: {\n      if (_.isLength(pen.current.active_selection)) {\n        setSelections(oldSelections => {\n          let selection = oldSelections.pop() || {};\n          selection.xTarget = pen.current.delta[0] + x;\n          selection.yTarget = pen.current.delta[1] + y;\n          return [...oldSelections, selection];\n        });\n      } else {\n        const [x0, y0] = getClosestPointToCanvas(pen.current.startPoint);\n        const [xn, yn] = getClosestPointToCanvas([x, y]);\n        setSelections(oldSelections => {\n          let selection = oldSelections.pop() || {};\n          selection.x = Math.min(x0, xn);\n          selection.y = Math.min(y0, yn);\n          selection.xTarget = selection.x;\n          selection.yTarget = selection.y;\n          selection.width = Math.abs(xn - x0);\n          selection.height = Math.abs(yn - y0);\n          if (selection.width !== 0 && selection.height !== 0) {\n            selection.data = backgroundCanvas.current.getContext('2d')\n              .getImageData(x0, y0, xn - x0, yn - y0);\n          }\n          return [...oldSelections, selection];\n        });\n      }\n      break;\n    }\n    default:\n    }\n    pen.current.lastPoint = [x, y];\n  }\n\n  const canvasSize = {width: props.width, height: props.height};\n  const cssSize = {\n    width: `${props.width * props.zoom}px`,\n    height: `${props.height * props.zoom}px`,\n  };\n  const cssTransform = {\n    transform: `${CENTER} translate(${props.pos[0]}px, ${props.pos[1]}px)`,\n  };\n\n  return (\n    <div className=\"Artboard\"\n      onMouseDown={handleDrawingStart}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleDrawingEnd}\n      onTouchStart={handleDrawingStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleDrawingEnd}\n    >\n      <div\n        className=\"canvas\"\n        style={{...cssSize, ...cssTransform}}\n      >\n        <canvas ref={backgroundCanvas} {...canvasSize} style={cssSize}></canvas>\n        <canvas id=\"drawing\" ref={drawingCanvas}\n          {...canvasSize}\n          style={cssSize}\n        ></canvas>\n        <canvas id=\"selection\" ref={selectionCanvas}\n          width={props.width * props.zoom}\n          height={props.height * props.zoom}\n        ></canvas>\n      </div>\n    </div>\n  );\n}\n\nexport default Artboard;\n","import React from 'react';\nimport './palette.css';\n\nfunction Color(props) {\n  return (\n    <div\n      className={props.selected ? 'color selected' : 'color'}\n      style={{backgroundColor: props.value}}\n      onClick={() => {\n        props.handleColorUpdate(props.value);\n      }}\n    >\n      {props.selected && <div />}\n    </div>\n  );\n}\n\nfunction Palette(props) {\n  const colors = props.colors;\n  return (\n    <div className=\"palette\">\n      {colors.map(c => (\n        <Color\n          key={c}\n          value={c}\n          selected={props.color === c}\n          handleColorUpdate={props.onColorUpdate}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Palette;\n","import React, {useState, useRef} from 'react';\nimport 'toolbox/Toolbox.css';\n\nimport {TOOLS} from 'services/AppState';\nimport Palette from 'palette/palette';\n\nexport default function Toolbox(props) {\n  let [isExpanded, setIsExpanded] = useState(false);\n  let toolsRef = useRef();\n\n  function handleTouchAndClick(e) {\n    switch (e.type) {\n    case 'touchstart':\n      setIsExpanded(true);\n      break;\n    case 'touchend':\n    case 'touchcancel': {\n      const touch = e.changedTouches[0];\n      const elem = document.elementFromPoint(\n        touch.pageX - window.scrollX,\n        touch.clientY - window.scrollY);\n      if (elem && toolsRef.current.contains(elem)) {\n        elem.click();\n      }\n      break;\n    }\n    case 'click':\n      setIsExpanded(prev => !prev);\n      break;\n    default:\n    }\n  }\n\n  function getToolboxBackgroundStyle() {\n    return {backgroundColor: props.tool === TOOLS.PENCIL ? props.color: null};\n  }\n\n  return (\n    <div className=\"Toolbox\">\n      <div\n        className={`anchor ${props.tool}`}\n        onTouchStart={handleTouchAndClick}\n        onTouchMove={handleTouchAndClick}\n        onTouchEnd={handleTouchAndClick}\n        onTouchCancel={handleTouchAndClick}\n        onClick={handleTouchAndClick}\n        style={getToolboxBackgroundStyle()}\n      ></div>\n      <div\n        ref={toolsRef}\n        className={`tools ${isExpanded ? 'visible' : 'hidden'}`}\n        onClick={() => setIsExpanded(false)}\n      >\n        <button onClick={props.clear}>Clear</button>\n        <button\n          onClick={() => props.setTool(TOOLS.ERASER)}\n          disabled={props.tool === TOOLS.ERASER}\n        >\n          Eraser\n        </button>\n        <button\n          onClick={() => props.setTool(TOOLS.SELECTION)}\n          disabled={props.tool === TOOLS.SELECTION}\n        >\n          Selection\n        </button>\n        <Palette\n          colors={props.palette}\n          color={props.color}\n          onColorUpdate={props.setColor}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport 'App.css';\n\nimport useAppState from 'services/AppState';\nimport useMultiTouch from 'services/MultiTouch';\nimport Artboard from 'artboard/Artboard';\nimport Toolbox from 'toolbox/Toolbox';\n\nfunction App() {\n  const [state, dispatch, dispatcher, reader] = useAppState();\n  let [pos, setPos] = useState([0, 0]);\n\n  function clear() {\n    if (window.confirm('Clear the canvas?')) {\n      dispatch({type: 'CLEAR_CANVAS'});\n    }\n  }\n\n  function updateCanvas(data) {\n    dispatcher.addHistory(data);\n  }\n\n  useEffect(() => {\n    if (state.initiated && state.canvas === null) {\n      let input = window.prompt('Enter canvas size', '64 64');\n      let size = input ? input.split(' ') : [64, 64];\n      dispatch({\n        type: 'RESIZE_CANVAS',\n        value: {\n          width: parseInt(size[0]),\n          height: parseInt(size[1]),\n        },\n      });\n    }\n  }, [state.initiated, state.canvas]);\n\n  let [gesture, appRef] = useMultiTouch();\n  let [multiTouchStartState, setMultiTouchStartSate] = useState(null);\n  useEffect(() => {\n    if (!gesture) {\n      setMultiTouchStartSate(null);\n      return;\n    } else if (gesture.start === gesture.current) {\n      setMultiTouchStartSate({pos: pos, zoom: state.zoom});\n      return;\n    }\n    setPos([\n      multiTouchStartState.pos[0] + gesture.movement[0],\n      multiTouchStartState.pos[1] + gesture.movement[1],\n    ]);\n    const newZoom = Math.trunc(gesture.scale * multiTouchStartState.zoom);\n    if (newZoom !== state.zoom) {\n      dispatch({type: 'ZOOM_TO', value: newZoom});\n    }\n  }, [gesture]);\n\n  return (\n    <div className=\"App\" ref={appRef}>\n      <Artboard\n        width={reader.width}\n        height={reader.height}\n        zoom={state.zoom}\n        color={reader.color}\n        tool={reader.tool}\n        onCanvasUpdate={updateCanvas}\n        data={reader.canvasData}\n        pos={pos}\n      ></Artboard>\n      <div className=\"top-left\">\n        <button\n          disabled={!reader.canUndo}\n          onClick={() => dispatch({type: 'UNDO'})}\n        >Undo</button>\n      </div>\n      <div className=\"top-right\">\n        <button\n          disabled={!reader.canRedo}\n          onClick={() => dispatch({type: 'REDO'})}\n        >Redo</button>\n      </div>\n      <div className=\"bottom-left\">\n        <Toolbox\n          tool={reader.tool}\n          color={reader.color}\n          palette={state.palette}\n          clear={clear}\n          setTool={dispatcher.setTool}\n          setColor={dispatcher.setColor}\n        ></Toolbox>\n        <button onClick={()=> { dispatch({type: 'ZOOM_OUT'}); }}>-</button>\n        <button onClick={()=> { dispatch({type: 'ZOOM_IN'}); }}>+</button>\n      </div>\n      <div className=\"bottom-right\">\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// Prevent double tap to zoom\nlet lastTouchEnd = 0;\ndocument.addEventListener('touchend', e => {\n  if (e.timeStamp - lastTouchEnd <= 350) {\n    e.preventDefault();\n  }\n  lastTouchEnd = e.timeStamp;\n}, false);\n\n// Prevent pinch gesture\ndocument.addEventListener('gesturestart', e => {\n  e.preventDefault();\n}, false);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}